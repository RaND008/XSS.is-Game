"""
–ê—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è XSS Game
"""

import os
import threading
import time
from typing import Optional

from config.settings import AUDIO_SETTINGS, SOUND_EFFECTS
from ui.colors import XSSColors


class AudioSystem:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–æ–π"""
    
    def __init__(self):
        self.audio_available = False
        self.audio_backend = None
        self.music_enabled = AUDIO_SETTINGS['music_enabled']
        self.sound_enabled = AUDIO_SETTINGS['sound_enabled']
        self.music_volume = AUDIO_SETTINGS['music_volume']
        self.sound_volume = AUDIO_SETTINGS['sound_volume']
        self.background_music = AUDIO_SETTINGS['background_music']
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π
        self.music_thread = None
        self.stop_music_flag = False
        
        self._initialize_audio()
    
    def _initialize_audio(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã"""
        # –ü—Ä–æ–±—É–µ–º pygame –ø–µ—Ä–≤—ã–º
        try:
            import pygame
            pygame.mixer.init(frequency=22050, size=-16, channels=2, buffer=512)
            self.audio_available = True
            self.audio_backend = "pygame"
            print(f"{XSSColors.SUCCESS}[‚ô™] –ê—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–∞: pygame (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è){XSSColors.RESET}")
            return
        except Exception as e:
            print(f"{XSSColors.WARNING}[!] pygame –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}{XSSColors.RESET}")
        
        # Fallback –Ω–∞ playsound
        try:
            self.audio_available = True
            self.audio_backend = "playsound"
            print(f"{XSSColors.INFO}[‚ô™] –ê—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–∞: playsound{XSSColors.RESET}")
        except Exception:
            self.audio_available = False
            print(f"{XSSColors.ERROR}[!] –ê—É–¥–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pygame –∏–ª–∏ playsound{XSSColors.RESET}")
    
    def check_audio_files(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤"""
        os.makedirs("music", exist_ok=True)
        os.makedirs("sounds", exist_ok=True)
        
        missing = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É
        if not os.path.exists(self.background_music):
            missing.append(f"–§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞: {self.background_music}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        for effect, path in SOUND_EFFECTS.items():
            if not os.path.exists(path):
                missing.append(f"–ó–≤—É–∫ '{effect}': {path}")
        
        if missing:
            print(f"{XSSColors.WARNING}[!] –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:{XSSColors.RESET}")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5
            for item in missing[:5]:
                print(f"    - {item}")
            if len(missing) > 5:
                print(f"    ... –∏ –µ—â–µ {len(missing) - 5} —Ñ–∞–π–ª–æ–≤")
            print(f"{XSSColors.INFO}–ò–≥—Ä–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–≤—É–∫–æ–≤{XSSColors.RESET}")
            return False
        
        print(f"{XSSColors.SUCCESS}[‚ô™] –í—Å–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!{XSSColors.RESET}")
        return True

    def play_sound(self, effect_name: str, wait: bool = False) -> bool:
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∞–π–ª–æ–≤"""
        if not self.audio_available or not self.sound_enabled:
            return False

        if effect_name not in SOUND_EFFECTS:
            return False

        file_path = SOUND_EFFECTS[effect_name]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(file_path):
            # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            os.makedirs(os.path.dirname(file_path), exist_ok=True)
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ñ–∞–π–ª–∞, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∏–≥—Ä—É
            if hasattr(self, '_missing_sounds'):
                if effect_name not in self._missing_sounds:
                    self._missing_sounds.add(effect_name)
                    print(f"{XSSColors.WARNING}[–ê—É–¥–∏–æ] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}{XSSColors.RESET}")
            else:
                self._missing_sounds = {effect_name}
                print(f"{XSSColors.WARNING}[–ê—É–¥–∏–æ] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}{XSSColors.RESET}")
            return False

        try:
            if self.audio_backend == "pygame":
                import pygame
                sound = pygame.mixer.Sound(file_path)
                sound.set_volume(self.sound_volume)
                channel = sound.play()
                if wait and channel:
                    while channel.get_busy():
                        time.sleep(0.1)
                return True
            else:
                # playsound –≤–µ—Ä—Å–∏—è
                threading.Thread(
                    target=self._safe_playsound,
                    args=(os.path.abspath(file_path),),
                    daemon=True
                ).start()
                return True
        except Exception as e:
            print(f"{XSSColors.ERROR}[–ê—É–¥–∏–æ] –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è {effect_name}: {e}{XSSColors.RESET}")
            return False

    def start_background_music(self) -> bool:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∞–π–ª–∞"""
        if not self.audio_available or not self.music_enabled:
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not os.path.exists(self.background_music):
            os.makedirs(os.path.dirname(self.background_music), exist_ok=True)
            print(f"{XSSColors.WARNING}[–ú—É–∑—ã–∫–∞] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.background_music}{XSSColors.RESET}")
            return False

        try:
            if self.audio_backend == "pygame":
                import pygame
                pygame.mixer.music.load(self.background_music)
                pygame.mixer.music.set_volume(self.music_volume)
                pygame.mixer.music.play(-1)  # -1 = –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
                return True
            else:
                # –°—Ç–∞—Ä—ã–π –∫–æ–¥ –¥–ª—è playsound
                self.stop_music_flag = False
                self.music_thread = threading.Thread(target=self._music_loop, daemon=True)
                self.music_thread.start()
                return True
        except Exception as e:
            print(f"{XSSColors.ERROR}[–ú—É–∑—ã–∫–∞] –û—à–∏–±–∫–∞: {e}{XSSColors.RESET}")
            return False
    
    def stop_background_music(self) -> None:
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É"""
        if self.audio_backend == "pygame":
            try:
                import pygame
                pygame.mixer.music.stop()
            except Exception:
                pass
        else:
            # –°—Ç–∞—Ä—ã–π –∫–æ–¥ –¥–ª—è playsound
            self.stop_music_flag = True
            if self.music_thread and self.music_thread.is_alive():
                self.music_thread.join(timeout=0.5)
    
    def _music_loop(self) -> None:
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É –≤ —Ü–∏–∫–ª–µ (–¥–ª—è playsound)"""
        while self.music_enabled and not self.stop_music_flag:
            try:
                if os.path.exists(self.background_music):
                    self._safe_playsound(self.background_music)
                    time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–≤—Ç–æ—Ä–∞–º–∏
                else:
                    break
            except Exception as e:
                if "Error 259" not in str(e) and "Error 263" not in str(e):
                    print(f"{XSSColors.ERROR}[–û—à–∏–±–∫–∞ –º—É–∑—ã–∫–∏] {e}{XSSColors.RESET}")
                break
    
    def is_music_playing(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏–≥—Ä–∞–µ—Ç –ª–∏ –º—É–∑—ã–∫–∞"""
        if self.audio_backend == "pygame":
            try:
                import pygame
                return pygame.mixer.music.get_busy()
            except Exception:
                return False
        else:
            return self.music_thread and self.music_thread.is_alive() if self.music_thread else False
    
    def toggle_music(self) -> None:
        """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –º—É–∑—ã–∫—É"""
        self.music_enabled = not self.music_enabled
        
        if self.music_enabled:
            self.start_background_music()
            print(f"{XSSColors.SUCCESS}[‚ô™] –ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞{XSSColors.RESET}")
        else:
            self.stop_background_music()
            print(f"{XSSColors.WARNING}[‚ô™] –ú—É–∑—ã–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞{XSSColors.RESET}")
    
    def toggle_sounds(self) -> None:
        """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∑–≤—É–∫–∏"""
        self.sound_enabled = not self.sound_enabled
        status = "–≤–∫–ª—é—á–µ–Ω—ã" if self.sound_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
        print(f"{XSSColors.INFO}[üîä] –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã {status}{XSSColors.RESET}")
        
        if self.sound_enabled:
            self.play_sound("success")
    
    def set_music_volume(self, volume: float) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏"""
        if not 0 <= volume <= 1:
            return False
        
        self.music_volume = volume
        
        if self.audio_backend == "pygame":
            try:
                import pygame
                pygame.mixer.music.set_volume(volume)
                return True
            except Exception:
                return False
        
        return True
    
    def set_sound_volume(self, volume: float) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤"""
        if not 0 <= volume <= 1:
            return False
        
        self.sound_volume = volume
        return True
    
    def get_music_volume(self) -> float:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏"""
        if self.audio_backend == "pygame":
            try:
                import pygame
                return pygame.mixer.music.get_volume()
            except Exception:
                return self.music_volume
        return self.music_volume
    
    def test_sounds(self) -> None:
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã"""
        print(f"\n{XSSColors.INFO}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–≤—É–∫–æ–≤...{XSSColors.RESET}")
        test_sounds = ["keypress", "success", "fail", "coin", "alert"]
        
        for sound in test_sounds:
            if sound in SOUND_EFFECTS and os.path.exists(SOUND_EFFECTS[sound]):
                print(f"   –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è: {sound}")
                self.play_sound(sound)
                time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–≤—É–∫–∞–º–∏
    
    def audio_menu(self) -> None:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É–¥–∏–æ"""
        while True:
            print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –ù–ê–°–¢–†–û–ô–ö–ò –ó–í–£–ö–ê ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–æ–π –±—ç–∫–µ–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
            print(f"\n{XSSColors.INFO}–ê—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–∞: {self.audio_backend}{XSSColors.RESET}")
            
            print(f"\n{XSSColors.INFO}–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:{XSSColors.RESET}")
            print(f"   –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞: {XSSColors.SUCCESS if self.music_enabled else XSSColors.ERROR}"
                  f"{'–í–∫–ª—é—á–µ–Ω–∞' if self.music_enabled else '–í—ã–∫–ª—é—á–µ–Ω–∞'}{XSSColors.RESET}")
            
            # –î–ª—è pygame –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            if self.audio_backend == "pygame" and self.music_enabled:
                playing = self.is_music_playing()
                print(f"   –°—Ç–∞—Ç—É—Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {XSSColors.SUCCESS if playing else XSSColors.WARNING}"
                      f"{'–ò–≥—Ä–∞–µ—Ç' if playing else '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}{XSSColors.RESET}")
            
            print(f"   –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: {XSSColors.SUCCESS if self.sound_enabled else XSSColors.ERROR}"
                  f"{'–í–∫–ª—é—á–µ–Ω—ã' if self.sound_enabled else '–í—ã–∫–ª—é—á–µ–Ω—ã'}{XSSColors.RESET}")
            
            print(f"\n{XSSColors.INFO}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{XSSColors.RESET}")
            print(f"   [M] –í–∫–ª/–≤—ã–∫–ª –º—É–∑—ã–∫—É")
            print(f"   [S] –í–∫–ª/–≤—ã–∫–ª –∑–≤—É–∫–∏")
            print(f"   [R] –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –º—É–∑—ã–∫—É")
            print(f"   [V] –ì—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏")
            print(f"   [N] –ì—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤")
            print(f"   [T] –¢–µ—Å—Ç –∑–≤—É–∫–æ–≤")
            print(f"   [Q] –í—ã—Ö–æ–¥")
            
            choice = input(f"\n{XSSColors.PROMPT}–í—ã–±–æ—Ä: {XSSColors.RESET}").lower()
            
            if choice == 'm':
                self.toggle_music()
            elif choice == 's':
                self.toggle_sounds()
            elif choice == 'r':
                if self.music_enabled:
                    self.stop_background_music()
                    time.sleep(0.5)
                    self.start_background_music()
                    print(f"{XSSColors.SUCCESS}[‚ô™] –ú—É–∑—ã–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞{XSSColors.RESET}")
            elif choice == 'v':
                if self.audio_backend == "pygame":
                    current_vol = self.get_music_volume()
                    print(f"\n{XSSColors.INFO}–¢–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏: {current_vol:.1f}{XSSColors.RESET}")
                    try:
                        new_vol = float(input(f"{XSSColors.PROMPT}–ù–æ–≤–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å (0.0-1.0): {XSSColors.RESET}"))
                        if self.set_music_volume(new_vol):
                            print(f"{XSSColors.SUCCESS}–ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {new_vol:.1f}{XSSColors.RESET}")
                        else:
                            print(f"{XSSColors.ERROR}–ì—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0.0 –¥–æ 1.0{XSSColors.RESET}")
                    except ValueError:
                        print(f"{XSSColors.ERROR}–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ{XSSColors.RESET}")
                else:
                    print(f"{XSSColors.WARNING}–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è pygame{XSSColors.RESET}")
            elif choice == 'n':
                print(f"\n{XSSColors.INFO}–¢–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤: {self.sound_volume:.1f}{XSSColors.RESET}")
                try:
                    new_vol = float(input(f"{XSSColors.PROMPT}–ù–æ–≤–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å (0.0-1.0): {XSSColors.RESET}"))
                    if self.set_sound_volume(new_vol):
                        print(f"{XSSColors.SUCCESS}–ì—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {new_vol:.1f}{XSSColors.RESET}")
                        self.play_sound("success")  # –¢–µ—Å—Ç
                    else:
                        print(f"{XSSColors.ERROR}–ì—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0.0 –¥–æ 1.0{XSSColors.RESET}")
                except ValueError:
                    print(f"{XSSColors.ERROR}–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ{XSSColors.RESET}")
            elif choice == 't':
                self.test_sounds()
            elif choice == 'q':
                break
            else:
                print(f"{XSSColors.ERROR}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä{XSSColors.RESET}")
            
            if choice != 'q':
                input(f"\n{XSSColors.INFO}–ù–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...{XSSColors.RESET}")
    
    def get_input_with_sound(self, prompt: str) -> str:
        """Input —Å–æ –∑–≤—É–∫–æ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏"""
        self.play_sound("keypress")
        return input(prompt)


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã
audio_system = AudioSystem()