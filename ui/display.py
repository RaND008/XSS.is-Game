"""
–§—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

from typing import Dict, Any
from ui.colors import XSSColors
from ui.effects import skill_bar, format_currency, format_reputation, progress_bar
from config.settings import ITEM_CATEGORIES


def show_status(game_state) -> None:
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–∞"""
    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –í–ê–® –ü–†–û–§–ò–õ–¨ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")

    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\n{XSSColors.INFO}üë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø:{XSSColors.RESET}")
    print(f"   {XSSColors.PROMPT}–ù–∏–∫–Ω–µ–π–º:{XSSColors.RESET} {game_state.get_stat('username')}")
    print(f"   {XSSColors.PROMPT}–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:{XSSColors.RESET} {game_state.get_stat('join_date')}")
    print(f"   {XSSColors.PROMPT}–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç:{XSSColors.RESET} {game_state.get_stat('last_seen')}")
    
    faction_name = game_state.get_stat('faction', '–ù–µ—Ç')
    faction_color = XSSColors.SUCCESS if faction_name != '–ù–µ—Ç' else XSSColors.WARNING
    print(f"   {XSSColors.PROMPT}–§—Ä–∞–∫—Ü–∏—è:{XSSColors.RESET} {faction_color}{faction_name}{XSSColors.RESET}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\n{XSSColors.INFO}üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:{XSSColors.RESET}")
    reputation = game_state.get_stat('reputation')
    print(f"   {format_reputation(reputation)}")

    # Heat Level —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
    heat_level = game_state.get_stat("heat_level", 0)
    if heat_level < 30:
        heat_color = XSSColors.SUCCESS
        heat_status = "–ù–∏–∑–∫–∏–π"
    elif heat_level < 70:
        heat_color = XSSColors.WARNING
        heat_status = "–°—Ä–µ–¥–Ω–∏–π"
    else:
        heat_color = XSSColors.DANGER
        heat_status = "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
    print(f"   {XSSColors.INFO}Heat Level:{XSSColors.RESET} {heat_color}{heat_level}% ({heat_status}){XSSColors.RESET}")

    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    warnings = game_state.get_stat('warnings', 0)
    if warnings == 0:
        warn_color = XSSColors.SUCCESS
    elif warnings == 1:
        warn_color = XSSColors.WARNING
    else:
        warn_color = XSSColors.ERROR
    print(f"   {XSSColors.INFO}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:{XSSColors.RESET} {warn_color}{warnings}/3{XSSColors.RESET}")

    # –§–∏–Ω–∞–Ω—Å—ã
    print(f"\n{XSSColors.MONEY}üí∞ –§–ò–ù–ê–ù–°–´:{XSSColors.RESET}")
    btc_balance = game_state.get_stat('btc_balance', 0)
    usd_balance = game_state.get_stat('usd_balance', 0)
    print(f"   {format_currency(btc_balance, 'BTC')}")
    print(f"   {format_currency(usd_balance, 'USD')}")

    # –ö—Ä–∏–ø—Ç–æ–ø–æ—Ä—Ç—Ñ–µ–ª—å
    crypto_symbols = ["ETH", "LTC", "XRP", "DOGE"]
    has_crypto = any(game_state.get_stat(crypto, 0) > 0 for crypto in crypto_symbols)
    if has_crypto:
        print(f"\n{XSSColors.MONEY}üìà –ö–†–ò–ü–¢–û–ü–û–†–¢–§–ï–õ–¨:{XSSColors.RESET}")
        for crypto in crypto_symbols:
            amount = game_state.get_stat(crypto, 0)
            if amount > 0:
                print(f"   {crypto}: {amount:.4f}")

    # –ù–∞–≤—ã–∫–∏
    print(f"\n{XSSColors.SKILL}üéØ –ù–ê–í–´–ö–ò:{XSSColors.RESET}")
    skills = game_state.get_stat('skills', {})
    for skill, level in skills.items():
        print(f"   {skill_bar(skill.replace('_', ' ').title(), level)}")

    # –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
    inventory = game_state.get_stat('inventory', [])
    inventory_count = len(inventory)
    print(f"\n{XSSColors.INFO}üéí –°–ù–ê–†–Ø–ñ–ï–ù–ò–ï: {inventory_count} –ø—Ä–µ–¥–º–µ—Ç–æ–≤{XSSColors.RESET}")
    if inventory_count > 0:
        shown = min(5, inventory_count)
        for i in range(shown):
            print(f"   ‚Ä¢ {inventory[i]}")
        if inventory_count > 5:
            print(f"   ... –∏ –µ—â–µ {inventory_count - 5} –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
    else:
        print(f"   {XSSColors.WARNING}–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç{XSSColors.RESET}")

    # –ê–∫—Ç–∏–≤–Ω–∞—è –º–∏—Å—Å–∏—è
    print(f"\n{XSSColors.WARNING}üìã –ê–ö–¢–ò–í–ù–ê–Ø –ú–ò–°–°–ò–Ø:{XSSColors.RESET}")
    active_mission = game_state.get_stat("active_mission")
    if active_mission:
        progress = game_state.get_stat("mission_progress", 0)
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–∏—Å—Å–∏–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –º–∏—Å—Å–∏–π
        duration = 5  # –í—Ä–µ–º–µ–Ω–Ω–æ
        
        print(f"   {active_mission}")
        bar = progress_bar(progress, duration)
        print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {bar} {progress}/{duration}")
    else:
        print(f"   {XSSColors.WARNING}–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –º–∏—Å—Å–∏–∏{XSSColors.RESET}")

    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    achievements = game_state.get_stat('achievements', [])
    achievements_count = len(achievements)
    total_achievements = 10  # –í—Ä–µ–º–µ–Ω–Ω–æ, –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    
    achievement_percent = int((achievements_count / total_achievements) * 100) if total_achievements > 0 else 0
    if achievement_percent >= 80:
        ach_color = XSSColors.SUCCESS
    elif achievement_percent >= 50:
        ach_color = XSSColors.WARNING
    else:
        ach_color = XSSColors.INFO

    print(f"\n{XSSColors.INFO}üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–Ø: {ach_color}{achievements_count}/{total_achievements} ({achievement_percent}%){XSSColors.RESET}")

    # –°—é–∂–µ—Ç–Ω—ã–π —ç—Ç–∞–ø
    story_stage = game_state.get_stat("story_stage", 0)
    story_stages = {
        0: "–ù–æ–≤–∏—á–æ–∫ –Ω–∞ —Ñ–æ—Ä—É–º–µ",
        1: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏", 
        2: "–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
        3: "–≠–ª–∏—Ç–Ω—ã–π —Ö–∞–∫–µ—Ä",
        4: "–õ–µ–≥–µ–Ω–¥–∞ –ø–æ–¥–ø–æ–ª—å—è"
    }
    stage_title = story_stages.get(story_stage, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç—Ç–∞–ø")
    print(f"\n{XSSColors.STORY}üìñ –°–Æ–ñ–ï–¢–ù–´–ô –≠–¢–ê–ü: {stage_title}{XSSColors.RESET}")

    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")


def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Å–ø—Ä–∞–≤–∫—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫"""
    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –°–ü–†–ê–í–ö–ê XSS GAME ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")

    print(f"\n{XSSColors.INFO}üéØ –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:{XSSColors.RESET}")
    basic_commands = [
        ("status", "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        ("missions", "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è"),
        ("market", "–¢–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫"),
        ("training", "–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤"),
        ("forum", "–•–∞–∫–µ—Ä—Å–∫–∏–π —Ñ–æ—Ä—É–º"),
        ("crypto", "–ö—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∞"),
        ("network", "–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
    ]

    for cmd, desc in basic_commands:
        print(f"   {XSSColors.SUCCESS}{cmd:<12}{XSSColors.RESET} {desc}")

    print(f"\n{XSSColors.WARNING}‚ö° –ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´:{XSSColors.RESET}")
    quick_commands = [
        ("take <id>", "–í–∑—è—Ç—å –º–∏—Å—Å–∏—é"),
        ("buy <id>", "–ö—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç"),
        ("work", "–†–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –º–∏—Å—Å–∏–µ–π"),
        ("connect <ip>", "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —É–∑–ª—É"),
        ("nmap <target>", "–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—å"),
        ("save", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä—É"),
        ("exit", "–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
    ]

    for cmd, desc in quick_commands:
        print(f"   {XSSColors.WARNING}{cmd:<15}{XSSColors.RESET} {desc}")

    print(f"\n{XSSColors.INFO}üåê –°–ï–¢–ï–í–´–ï –û–ü–ï–†–ê–¶–ò–ò:{XSSColors.RESET}")
    network_commands = [
        ("vpn", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VPN"),
        ("scan", "–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç—å"),
        ("botnet", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–Ω–µ—Ç–∞–º–∏"),
        ("ddos <target>", "DDoS –∞—Ç–∞–∫–∞")
    ]

    for cmd, desc in network_commands:
        print(f"   {XSSColors.INFO}{cmd:<15}{XSSColors.RESET} {desc}")

    print(f"\n{XSSColors.SUCCESS}üéÆ –†–ê–ó–í–ò–¢–ò–ï –ò –ü–†–û–ì–†–ï–°–°:{XSSColors.RESET}")
    progress_commands = [
        ("faction", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—Ä–∞–∫—Ü–∏–∏"),
        ("join_faction", "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ñ—Ä–∞–∫—Ü–∏–∏"),
        ("mission_stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏—Å—Å–∏–π"),
        ("moral_profile", "–ú–æ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å")
    ]

    for cmd, desc in progress_commands:
        print(f"   {XSSColors.SUCCESS}{cmd:<15}{XSSColors.RESET} {desc}")

    print(f"\n{XSSColors.INFO}üìö –ü–û–õ–£–ß–ò–¢–¨ –ë–û–õ–¨–®–ï –ü–û–ú–û–©–ò:{XSSColors.RESET}")
    print(f"   {XSSColors.BRIGHT_GREEN}commands{XSSColors.RESET}        –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏")
    print(f"   {XSSColors.BRIGHT_GREEN}help <–∫–æ–º–∞–Ω–¥–∞>{XSSColors.RESET}   –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ")
    print(f"   {XSSColors.BRIGHT_GREEN}tips{XSSColors.RESET}           –°–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å readline –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    try:
        import readline
        has_readline = True
    except ImportError:
        has_readline = False

    if has_readline:
        print(f"\n{XSSColors.SUCCESS}üí° –ê–í–¢–û–î–û–ü–û–õ–ù–ï–ù–ò–ï:{XSSColors.RESET}")
        print(f"   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ {XSSColors.WARNING}TAB{XSSColors.RESET} –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤")
        print(f"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {XSSColors.WARNING}‚Üë‚Üì{XSSColors.RESET} –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥")
        print(f"   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞–∂–º–∏—Ç–µ {XSSColors.WARNING}TAB{XSSColors.RESET}")
    else:
        print(f"\n{XSSColors.WARNING}üí° –ê–í–¢–û–î–û–ü–û–õ–ù–ï–ù–ò–ï:{XSSColors.RESET}")
        print(f"   ‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pyreadline3")
        print(f"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'commands' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")

    print(f"\n{XSSColors.INFO}üî• –ü–û–õ–ï–ó–ù–´–ï –°–û–í–ï–¢–´:{XSSColors.RESET}")
    tips = [
        "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã 'status' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'training' –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤",
        "VPN —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∞—Ç–∞–∫–∞—Ö",
        "–í—ã—Å–æ–∫–∏–π Heat Level –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∞—Ä–µ—Å—Ç—É",
        "–§—Ä–∞–∫—Ü–∏–∏ –¥–∞—é—Ç –±–æ–Ω—É—Å—ã –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º"
    ]

    for i, tip in enumerate(tips, 1):
        print(f"   {i}. {tip}")

    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
    print(f"{XSSColors.BRIGHT_GREEN}üí° –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å —Ö–∞–∫–µ—Ä–∞ —Å –∫–æ–º–∞–Ω–¥—ã 'status'!{XSSColors.RESET}")


def show_command_detailed_help(command: str) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ"""

    # –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥
    detailed_help = {
        "status": {
            "desc": "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Ö–∞–∫–µ—Ä–µ",
            "usage": "status",
            "details": [
                "‚Ä¢ –ù–∏–∫–Ω–µ–π–º –∏ —É—Ä–æ–≤–µ–Ω—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏",
                "‚Ä¢ –¢–µ–∫—É—â–∏–µ –Ω–∞–≤—ã–∫–∏ (cracking, stealth, scanning)",
                "‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (BTC, USD, –∫—Ä–∏–ø—Ç–æ–ø–æ—Ä—Ç—Ñ–µ–ª—å)",
                "‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∞—è –º–∏—Å—Å–∏—è –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
                "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å Heat (–ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π –ø—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤)",
                "‚Ä¢ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
                "‚Ä¢ –§—Ä–∞–∫—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"
            ]
        },
        "missions": {
            "desc": "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ü–µ–Ω—Ç—Ä –∑–∞–¥–∞–Ω–∏–π –¥–ª—è —Ö–∞–∫–µ—Ä–æ–≤",
            "usage": "missions",
            "details": [
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∏—Å—Å–∏–π",
                "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–∑–º–µ—Ä—É –Ω–∞–≥—Ä–∞–¥—ã",
                "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –∫ –Ω–∞–≤—ã–∫–∞–º",
                "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∑—è—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π 'take'",
                "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç–µ–∫—É—â–µ–π –º–∏—Å—Å–∏–∏",
                "‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è"
            ]
        },
        "market": {
            "desc": "–¢–µ–Ω–µ–≤–æ–π —Ä—ã–Ω–æ–∫ —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–≥—Ä–∞–º–º",
            "usage": "market",
            "details": [
                "‚Ä¢ –ü–æ–∫—É–ø–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ü–û –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (—Å–∫–∞–Ω–µ—Ä—ã, –∫—Ä–µ–∫–µ—Ä—ã, –ø—Ä–æ–∫—Å–∏)",
                "‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–æ–≤",
                "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –∏ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º–æ–≥–æ",
                "‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–∫–∏–¥–∫–∏",
                "‚Ä¢ –û—Ç–∑—ã–≤—ã –¥—Ä—É–≥–∏—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"
            ]
        },
        "training": {
            "desc": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤",
            "usage": "training",
            "details": [
                "‚Ä¢ –ú–∏–Ω–∏-–∏–≥—Ä—ã –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ cracking, stealth, scanning",
                "‚Ä¢ –ù–∞–≥—Ä–∞–¥—ã –≤ –≤–∏–¥–µ BTC –∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∑–∞ —É—Å–ø–µ—à–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
                "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é",
                "‚Ä¢ –†–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–≤—ã–∫–∞",
                "‚Ä¢ –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –±–æ–Ω—É—Å—ã –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ (–Ω–∞–≤—ã–∫ 8+)"
            ]
        },
        "crypto": {
            "desc": "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∞—è –±–∏—Ä–∂–∞ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
            "usage": "crypto",
            "details": [
                "‚Ä¢ –û–±–º–µ–Ω BTC ‚Üî USD –∏ —Ç–æ—Ä–≥–æ–≤–ª—è –∞–ª—å—Ç–∫–æ–∏–Ω–∞–º–∏",
                "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—É—Ä—Å–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
                "‚Ä¢ –ì—Ä–∞—Ñ–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑",
                "‚Ä¢ –ü–æ—Ä—Ç—Ñ–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏",
                "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –∞–ª–µ—Ä—Ç–æ–≤",
                "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–π–Ω–∏–Ω–≥–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"
            ]
        },
        "forum": {
            "desc": "–ü–æ–¥–ø–æ–ª—å–Ω—ã–π —Ñ–æ—Ä—É–º —Ö–∞–∫–µ—Ä—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
            "usage": "forum",
            "details": [
                "‚Ä¢ –û–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —Ö–∞–∫–µ—Ä–∞–º–∏ –∏ –æ–±–º–µ–Ω –æ–ø—ã—Ç–æ–º",
                "‚Ä¢ –ü–æ–∏—Å–∫ —Ü–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                "‚Ä¢ –ß—Ç–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –∏ —É—á–∞—Å—Ç–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö",
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —á–∞—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π",
                "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –º–∏—Ä–∞ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                "‚Ä¢ –ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"
            ]
        },
        "network": {
            "desc": "–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏",
            "usage": "network",
            "details": [
                "‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–∑–ª–æ–≤ —Å–µ—Ç–∏",
                "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∏ –º–∞—Ä—à—Ä—É—Ç–µ",
                "‚Ä¢ –°—Ç–∞—Ç—É—Å VPN, –ø—Ä–æ–∫—Å–∏ –∏ —É—Ä–æ–≤–µ–Ω—å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏",
                "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞",
                "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏"
            ]
        },
        "take": {
            "desc": "–í–∑—è—Ç—å –º–∏—Å—Å–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π",
            "usage": "take <mission_id>",
            "details": [
                "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π ID –º–∏—Å—Å–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã 'missions'",
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ –Ω–∞–≤—ã–∫–∞–º",
                "‚Ä¢ –ú–æ–∂–Ω–æ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∞–∫—Ç–∏–≤–Ω—É—é –º–∏—Å—Å–∏—é –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
                "‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–∏—Å—Å–∏–∏ —Ç—Ä–µ–±—É—é—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã",
                "‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –º–∏—Å—Å–∏–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
                "‚Ä¢ –ú–æ—Ä–∞–ª—å–Ω—ã–µ –º–∏—Å—Å–∏–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –≤–∞—à —ç—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å"
            ],
            "examples": [
                "take web_vuln_scan     # –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π",
                "take database_breach   # –í–∑–ª–æ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
                "take social_engineering # –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
                "take team_bank_heist   # –ö–æ–º–∞–Ω–¥–Ω–æ–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –±–∞–Ω–∫–∞"
            ]
        },
        "buy": {
            "desc": "–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å —Ç–µ–Ω–µ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞",
            "usage": "buy <item_id>",
            "details": [
                "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞",
                "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ (BTC/USD)",
                "‚Ä¢ –ü—Ä–µ–¥–º–µ—Ç—ã –¥–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã –∫ –Ω–∞–≤—ã–∫–∞–º",
                "‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤",
                "‚Ä¢ –≠–ª–∏—Ç–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É",
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–∑—ã–≤—ã –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π –¥–æ—Ä–æ–≥–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
            ],
            "examples": [
                "buy basic_port_scanner    # –ë–∞–∑–æ–≤—ã–π —Å–∫–∞–Ω–µ—Ä –ø–æ—Ä—Ç–æ–≤",
                "buy proxy_network         # –°–µ—Ç—å –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–æ–≤",
                "buy elite_cracking_suite  # –≠–ª–∏—Ç–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –≤–∑–ª–æ–º–∞",
                "buy social_eng_toolkit    # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏"
            ]
        },
        "nmap": {
            "desc": "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –∏ —Å–ª—É–∂–± —Ü–µ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã",
            "usage": "nmap <target> [scan_type]",
            "details": [
                "‚Ä¢ target: IP –∞–¥—Ä–µ—Å, –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –∏–ª–∏ –∞–¥—Ä–µ—Å .onion",
                "‚Ä¢ scan_type: basic (–±—ã—Å—Ç—Ä–æ), full (–ø–æ–ª–Ω–æ), stealth (—Å–∫—Ä—ã—Ç–Ω–æ), vuln (—É—è–∑–≤–∏–º–æ—Å—Ç–∏)",
                "‚Ä¢ –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
                "‚Ä¢ –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å Heat Level",
                "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–ª–∏—è—é—Ç –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∞—Ç–∞–∫",
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è"
            ],
            "examples": [
                "nmap 192.168.1.1          # –ë–∞–∑–æ–≤–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞",
                "nmap target.com stealth    # –°–∫—Ä—ã—Ç–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞",
                "nmap 10.0.0.5 vuln        # –ü–æ–∏—Å–∫ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ",
                "nmap bank.example.com full # –ü–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞"
            ]
        },
        "vpn": {
            "desc": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏",
            "usage": "vpn [–∫–æ–º–∞–Ω–¥–∞]",
            "details": [
                "‚Ä¢ –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö VPN –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤",
                "‚Ä¢ vpn_connect <id> - –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É VPN",
                "‚Ä¢ vpn_disconnect - –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ VPN",
                "‚Ä¢ VPN —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∞—Ç–∞–∫–∞—Ö",
                "‚Ä¢ –†–∞–∑–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∏–º–µ—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∑–∞—â–∏—Ç—ã",
                "‚Ä¢ –ü–ª–∞—Ç–Ω—ã–µ VPN –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ª—É—á—à—É—é –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å"
            ],
            "examples": [
                "vpn                    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ VPN",
                "vpn_connect 1          # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø–µ—Ä–≤–æ–º—É VPN",
                "vpn_disconnect         # –û—Ç–∫–ª—é—á–∏—Ç—å VPN",
                "vpn_connect 3          # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–µ–º–∏—É–º VPN"
            ]
        },
        "work": {
            "desc": "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –∞–∫—Ç–∏–≤–Ω–æ–π –º–∏—Å—Å–∏–µ–π",
            "usage": "work",
            "details": [
                "‚Ä¢ –ü—Ä–æ–¥–≤–∏–≥–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –º–∏—Å—Å–∏–∏",
                "‚Ä¢ –ú–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –º–∏–Ω–∏-–∏–≥—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–∏—Å—Å–∏–∏",
                "‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç—Ç–∞–ø—ã —Ç—Ä–µ–±—É—é—Ç –ø—Ä–∏–Ω—è—Ç–∏—è –º–æ—Ä–∞–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π",
                "‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω—ã–µ –º–∏—Å—Å–∏–∏ —Ç—Ä–µ–±—É—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",
                "‚Ä¢ –ù–µ—É–¥–∞—á–∏ –º–æ–≥—É—Ç –ø–æ–≤—ã—Å–∏—Ç—å Heat Level –∏–ª–∏ –ø—Ä–æ–≤–∞–ª–∏—Ç—å –º–∏—Å—Å–∏—é",
                "‚Ä¢ –£—Å–ø–µ—Ö –ø—Ä–∏–Ω–æ—Å–∏—Ç BTC, —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤"
            ]
        },
        "faction": {
            "desc": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π —Ç–µ–∫—É—â–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏",
            "usage": "faction [–ø–æ–¥–∫–æ–º–∞–Ω–¥–∞]",
            "details": [
                "‚Ä¢ –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Ñ—Ä–∞–∫—Ü–∏–∏",
                "‚Ä¢ faction missions - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–∫—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è",
                "‚Ä¢ faction status - –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏",
                "‚Ä¢ –§—Ä–∞–∫—Ü–∏–∏ –¥–∞—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
                "‚Ä¢ White Hats: —ç—Ç–∏—á–Ω—ã–µ —Ö–∞–∫–µ—Ä—ã, –±–æ–Ω—É—Å—ã –∫ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏",
                "‚Ä¢ Black Hats: –∫–∏–±–µ—Ä–ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏, –±–æ–Ω—É—Å—ã –∫ –¥–æ—Ö–æ–¥–∞–º",
                "‚Ä¢ Gray Hats: –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã"
            ]
        }
    }

    if command in detailed_help:
        info = detailed_help[command]

        print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –°–ü–†–ê–í–ö–ê: {command.upper()} ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
        print(f"\n{XSSColors.INFO}üìã –û–ü–ò–°–ê–ù–ò–ï:{XSSColors.RESET}")
        print(f"   {info['desc']}")

        print(f"\n{XSSColors.WARNING}üíª –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:{XSSColors.RESET}")
        print(f"   {XSSColors.SUCCESS}{info['usage']}{XSSColors.RESET}")

        if 'details' in info:
            print(f"\n{XSSColors.INFO}üìù –ü–û–î–†–û–ë–ù–û–°–¢–ò:{XSSColors.RESET}")
            for detail in info['details']:
                print(f"   {detail}")

        if 'examples' in info:
            print(f"\n{XSSColors.SUCCESS}üí° –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:{XSSColors.RESET}")
            for example in info['examples']:
                if '#' in example:
                    cmd_part, comment = example.split('#', 1)
                    print(
                        f"   {XSSColors.WARNING}{cmd_part.strip()}{XSSColors.RESET} {XSSColors.DARK_GRAY}# {comment.strip()}{XSSColors.RESET}")
                else:
                    print(f"   {XSSColors.WARNING}{example}{XSSColors.RESET}")

        print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
        print(f"{XSSColors.INFO}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'commands' –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥{XSSColors.RESET}")

    else:
        print(f"\n{XSSColors.ERROR}‚ùå –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ '{command}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞{XSSColors.RESET}")
        print(f"{XSSColors.INFO}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'commands' –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥{XSSColors.RESET}")
        print(f"{XSSColors.INFO}üí° –∏–ª–∏ 'help' –¥–ª—è –æ–±—â–µ–π —Å–ø—Ä–∞–≤–∫–∏{XSSColors.RESET}")


def show_inventory(game_state, market_items: list = None) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"""
    inventory = game_state.get_stat('inventory', [])
    
    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –ò–ù–í–ï–ù–¢–ê–†–¨ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
    
    if not inventory:
        print(f"\n{XSSColors.WARNING}üì≠ –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç{XSSColors.RESET}")
        print(f"{XSSColors.INFO}–ü–æ–∫—É–ø–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤{XSSColors.RESET}")
        return
    
    print(f"\n{XSSColors.SUCCESS}üì¶ –í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã ({len(inventory)}):{XSSColors.RESET}\n")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
    if market_items:
        categories = {}
        for item_id in inventory:
            item_data = next((item for item in market_items if item["id"] == item_id), None)
            if item_data:
                category = item_data.get("type", "other")
                if category not in categories:
                    categories[category] = []
                categories[category].append(item_data)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        for category, items in categories.items():
            cat_info = ITEM_CATEGORIES.get(category, {"name": "–ü—Ä–æ—á–µ–µ", "icon": "üì¶"})
            print(f"{cat_info['icon']} {cat_info['name'].upper()}:")
            
            for item in items:
                print(f"   ‚Ä¢ {item['name']}")
                if 'desc' in item:
                    print(f"     {XSSColors.INFO}{item['desc']}{XSSColors.RESET}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã
                if 'bonus' in item:
                    bonus_str = []
                    for bonus, value in item['bonus'].items():
                        if bonus == "all_skills":
                            bonus_str.append(f"–í—Å–µ –Ω–∞–≤—ã–∫–∏ +{value}")
                        elif bonus in ["scanning", "cracking", "stealth", "social_eng"]:
                            bonus_str.append(f"{bonus.title()} +{value}")
                    
                    if bonus_str:
                        print(f"     {XSSColors.SKILL}–ë–æ–Ω—É—Å—ã: {', '.join(bonus_str)}{XSSColors.RESET}")
                print()
    else:
        # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö
        for i, item_id in enumerate(inventory, 1):
            print(f"   {i}. {item_id}")
    
    print(f"{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")


def show_mission_progress(game_state) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ–∫—É—â–µ–π –º–∏—Å—Å–∏–∏"""
    active_mission = game_state.get_stat("active_mission")
    
    if not active_mission:
        print(f"{XSSColors.WARNING}–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –º–∏—Å—Å–∏–∏{XSSColors.RESET}")
        return
    
    progress = game_state.get_stat("mission_progress", 0)
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∏—Å—Å–∏–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –º–∏—Å—Å–∏–π
    duration = 5  # –í—Ä–µ–º–µ–Ω–Ω–æ
    
    print(f"\n{XSSColors.INFO}üìã –¢–ï–ö–£–©–ê–Ø –ú–ò–°–°–ò–Ø:{XSSColors.RESET}")
    print(f"   {XSSColors.WARNING}{active_mission}{XSSColors.RESET}")
    
    bar = progress_bar(progress, duration, length=30)
    percentage = int((progress / duration) * 100) if duration > 0 else 0
    
    print(f"   {bar} {progress}/{duration} ({percentage}%)")
    
    if progress < duration:
        print(f"\n{XSSColors.INFO}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'work' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è{XSSColors.RESET}")
    else:
        print(f"\n{XSSColors.SUCCESS}‚úÖ –ú–∏—Å—Å–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é!{XSSColors.RESET}")


def show_faction_info(faction_data: Dict[str, Any]) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—Ä–∞–∫—Ü–∏–∏"""
    if not faction_data:
        print(f"{XSSColors.WARNING}–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏{XSSColors.RESET}")
        return
    
    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ –í–ê–®–ê –§–†–ê–ö–¶–ò–Ø ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Ñ—Ä–∞–∫—Ü–∏–∏
    faction_id = faction_data.get("id", "")
    if faction_id == "whitehats":
        color = XSSColors.SUCCESS
        icon = "üõ°Ô∏è"
    elif faction_id == "blackhats":
        color = XSSColors.DANGER
        icon = "üíÄ"
    else:
        color = XSSColors.WARNING
        icon = "üé≠"
    
    print(f"\n{icon} {color}{faction_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ—Ä–∞–∫—Ü–∏—è')}{XSSColors.RESET}")
    print(f"\n{XSSColors.INFO}{faction_data.get('desc', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}{XSSColors.RESET}")
    
    # –ë–æ–Ω—É—Å—ã —Ñ—Ä–∞–∫—Ü–∏–∏
    bonuses = faction_data.get("bonuses", {})
    if bonuses:
        print(f"\n{XSSColors.SUCCESS}üéÅ –ë–û–ù–£–°–´ –§–†–ê–ö–¶–ò–ò:{XSSColors.RESET}")
        for bonus, value in bonuses.items():
            if bonus == "reputation":
                print(f"   üìà –†–µ–ø—É—Ç–∞—Ü–∏—è x{value} –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏—Å—Å–∏–π")
            elif bonus == "heat_reduction":
                print(f"   ‚ùÑÔ∏è –°–Ω–∏–∂–µ–Ω–∏–µ Heat Level x{value}")
            elif bonus == "btc_multiplier":
                print(f"   üí∞ –ù–∞–≥—Ä–∞–¥—ã BTC x{value}")
            elif bonus == "skill_boost":
                print(f"   ‚ú® –í—Å–µ –Ω–∞–≤—ã–∫–∏ +{value}")
    
    print(f"\n{XSSColors.HEADER}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ{XSSColors.RESET}")


def show_notification(message: str, notification_type: str = "info") -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    type_XSSColors = {
        "info": XSSColors.INFO,
        "success": XSSColors.SUCCESS,
        "warning": XSSColors.WARNING,
        "error": XSSColors.ERROR,
        "danger": XSSColors.DANGER
    }
    
    type_icons = {
        "info": "‚ÑπÔ∏è",
        "success": "‚úÖ",
        "warning": "‚ö†Ô∏è",
        "error": "‚ùå",
        "danger": "üö®"
    }
    
    color = type_XSSColors.get(notification_type, XSSColors.INFO)
    icon = type_icons.get(notification_type, "‚Ä¢")
    
    print(f"\n{color}{icon} {message}{XSSColors.RESET}")


def format_time_ago(seconds: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è '–Ω–∞–∑–∞–¥'"""
    if seconds < 60:
        return f"{seconds}—Å –Ω–∞–∑–∞–¥"
    elif seconds < 3600:
        minutes = seconds // 60
        return f"{minutes}–º –Ω–∞–∑–∞–¥"
    elif seconds < 86400:
        hours = seconds // 3600
        return f"{hours}—á –Ω–∞–∑–∞–¥"
    else:
        days = seconds // 86400
        return f"{days}–¥ –Ω–∞–∑–∞–¥"


def create_table(headers: list, rows: list, max_width: int = 80) -> str:
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –≤ ASCII —Ñ–æ—Ä–º–∞—Ç–µ"""
    if not headers or not rows:
        return ""
    
    # –í—ã—á–∏—Å–ª—è–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
    col_widths = []
    for i, header in enumerate(headers):
        max_width_col = len(str(header))
        for row in rows:
            if i < len(row):
                max_width_col = max(max_width_col, len(str(row[i])))
        col_widths.append(min(max_width_col, max_width // len(headers)))
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    separator = "+" + "+".join("-" * (width + 2) for width in col_widths) + "+"
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    table = [separator]
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    header_row = "|"
    for i, header in enumerate(headers):
        header_row += f" {str(header):<{col_widths[i]}} |"
    table.append(header_row)
    table.append(separator)
    
    # –°—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    for row in rows:
        data_row = "|"
        for i, cell in enumerate(row):
            if i < len(col_widths):
                data_row += f" {str(cell):<{col_widths[i]}} |"
        table.append(data_row)
    
    table.append(separator)
    
    return "\n".join(table)